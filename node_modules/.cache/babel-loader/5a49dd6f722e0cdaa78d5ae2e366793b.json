{"ast":null,"code":"var _jsxFileName = \"D:\\\\IT-KAMASUTRA.COM\\\\React\\\\Project\\\\my-app-project\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nvar store = {\n  _state: {\n    posts: [{\n      message: 'Hi, how are you?',\n      likesCount: '12'\n    }, {\n      message: 'It\\'s my first post',\n      likesCount: '23'\n    }],\n    profiles: {\n      userName: 'Andruha',\n      birthDay: '12.08.1984',\n      city: 'Minsck',\n      aducation: 'higher',\n      webSite: 'drunya35@gmail.com'\n    },\n    dialogsItem: [{\n      name: 'Dimich',\n      id: '1'\n    }, {\n      name: 'Andrey',\n      id: '2'\n    }, {\n      name: 'Sveta',\n      id: '3'\n    }],\n    messages: [{\n      message: 'Hi',\n      foto: 'https://i.ytimg.com/vi/ToNcTEAEUqo/maxresdefault.jpg'\n    }, {\n      message: 'how are you?',\n      foto: 'https://i.ytimg.com/vi/ToNcTEAEUqo/maxresdefault.jpg'\n    }, {\n      message: 'yo it-camasutra!',\n      foto: 'https://i.ytimg.com/vi/ToNcTEAEUqo/maxresdefault.jpg'\n    }]\n  },\n  dispatch: function dispatch(action) {\n    switch (action.type) {\n      case 'addMessage':\n        {\n          this.addMessage(action.message);\n        }\n    }\n  },\n  getState: function getState() {\n    return this._state;\n  },\n  addMessage: function addMessage(message) {\n    this._state.messages.push({\n      message: message,\n      foto: 'https://i.ytimg.com/vi/ToNcTEAEUqo/maxresdefault.jpg'\n    });\n\n    render();\n  }\n};\n\nvar render = function render() {\n  ReactDOM.render(React.createElement(App, {\n    state: store.getState(),\n    dispatch: store.dispatch.bind(store),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), document.getElementById('root'));\n};\n\nrender();\nserviceWorker.unregister();","map":{"version":3,"sources":["D:\\IT-KAMASUTRA.COM\\React\\Project\\my-app-project\\src\\index.js"],"names":["React","ReactDOM","App","serviceWorker","store","_state","posts","message","likesCount","profiles","userName","birthDay","city","aducation","webSite","dialogsItem","name","id","messages","foto","dispatch","action","type","addMessage","getState","push","render","bind","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AAEA,IAAIC,KAAK,GAAG;AACRC,EAAAA,MAAM,EAAE;AACJC,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,OAAO,EAAE,kBADb;AAEIC,MAAAA,UAAU,EAAE;AAFhB,KADG,EAKH;AACID,MAAAA,OAAO,EAAE,qBADb;AAEIC,MAAAA,UAAU,EAAE;AAFhB,KALG,CADH;AAWJC,IAAAA,QAAQ,EAAE;AACNC,MAAAA,QAAQ,EAAE,SADJ;AAENC,MAAAA,QAAQ,EAAE,YAFJ;AAGNC,MAAAA,IAAI,EAAE,QAHA;AAINC,MAAAA,SAAS,EAAE,QAJL;AAKNC,MAAAA,OAAO,EAAE;AALH,KAXN;AAkBJC,IAAAA,WAAW,EAAE,CACT;AACIC,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,EAAE,EAAE;AAFR,KADS,EAKT;AACID,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,EAAE,EAAE;AAFR,KALS,EAST;AACID,MAAAA,IAAI,EAAE,OADV;AAEIC,MAAAA,EAAE,EAAE;AAFR,KATS,CAlBT;AAgCJC,IAAAA,QAAQ,EAAE,CACN;AACIX,MAAAA,OAAO,EAAE,IADb;AAEIY,MAAAA,IAAI,EAAE;AAFV,KADM,EAKN;AACIZ,MAAAA,OAAO,EAAE,cADb;AAEIY,MAAAA,IAAI,EAAE;AAFV,KALM,EASN;AACIZ,MAAAA,OAAO,EAAE,kBADb;AAEIY,MAAAA,IAAI,EAAE;AAFV,KATM;AAhCN,GADA;AAmDRC,EAAAA,QAnDQ,oBAmDCC,MAnDD,EAmDS;AACb,YAAQA,MAAM,CAACC,IAAf;AACI,WAAK,YAAL;AAAkB;AACd,eAAKC,UAAL,CAAgBF,MAAM,CAACd,OAAvB;AACH;AAHL;AAMH,GA1DO;AA4DRiB,EAAAA,QA5DQ,sBA4DG;AACP,WAAO,KAAKnB,MAAZ;AACH,GA9DO;AA+DRkB,EAAAA,UA/DQ,sBA+DGhB,OA/DH,EA+DY;AAChB,SAAKF,MAAL,CAAYa,QAAZ,CAAqBO,IAArB,CAA0B;AACtBlB,MAAAA,OAAO,EAAPA,OADsB;AAEtBY,MAAAA,IAAI,EAAE;AAFgB,KAA1B;;AAIAO,IAAAA,MAAM;AACT;AArEO,CAAZ;;AAwEA,IAAIA,MAAM,GAAG,SAATA,MAAS,GAAM;AACfzB,EAAAA,QAAQ,CAACyB,MAAT,CAAgB,oBAAC,GAAD;AAAK,IAAA,KAAK,EAAEtB,KAAK,CAACoB,QAAN,EAAZ;AACK,IAAA,QAAQ,EAAEpB,KAAK,CAACgB,QAAN,CAAeO,IAAf,CAAoBvB,KAApB,CADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,EAC8DwB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAD9D;AAGH,CAJD;;AAMAH,MAAM;AACNvB,aAAa,CAAC2B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nlet store = {\n    _state: {\n        posts: [\n            {\n                message: 'Hi, how are you?',\n                likesCount: '12'\n            },\n            {\n                message: 'It\\'s my first post',\n                likesCount: '23'\n            }\n        ],\n        profiles: {\n            userName: 'Andruha',\n            birthDay: '12.08.1984',\n            city: 'Minsck',\n            aducation: 'higher',\n            webSite: 'drunya35@gmail.com'\n        },\n        dialogsItem: [\n            {\n                name: 'Dimich',\n                id: '1'\n            },\n            {\n                name: 'Andrey',\n                id: '2'\n            },\n            {\n                name: 'Sveta',\n                id: '3'\n            }\n        ],\n        messages: [\n            {\n                message: 'Hi',\n                foto: 'https://i.ytimg.com/vi/ToNcTEAEUqo/maxresdefault.jpg'\n            },\n            {\n                message: 'how are you?',\n                foto: 'https://i.ytimg.com/vi/ToNcTEAEUqo/maxresdefault.jpg'\n            },\n            {\n                message: 'yo it-camasutra!',\n                foto: 'https://i.ytimg.com/vi/ToNcTEAEUqo/maxresdefault.jpg'\n            }\n        ]\n\n    },\n\n\n    dispatch(action) {\n        switch (action.type) {\n            case 'addMessage':{\n                this.addMessage(action.message)\n            }\n\n        }\n    },\n\n    getState() {\n        return this._state;\n    },\n    addMessage(message) {\n        this._state.messages.push({\n            message,\n            foto: 'https://i.ytimg.com/vi/ToNcTEAEUqo/maxresdefault.jpg'\n        })\n        render()\n    }\n}\n\nlet render = () => {\n    ReactDOM.render(<App state={store.getState()}\n                         dispatch={store.dispatch.bind(store)}/>, document.getElementById('root'));\n\n}\n\nrender()\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}