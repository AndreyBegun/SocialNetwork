{"ast":null,"code":"import _classCallCheck from \"D:\\\\IT-KAMASUTRA.COM\\\\React\\\\Project\\\\SocialNetwork\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\IT-KAMASUTRA.COM\\\\React\\\\Project\\\\SocialNetwork\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\IT-KAMASUTRA.COM\\\\React\\\\Project\\\\SocialNetwork\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\IT-KAMASUTRA.COM\\\\React\\\\Project\\\\SocialNetwork\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\IT-KAMASUTRA.COM\\\\React\\\\Project\\\\SocialNetwork\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\IT-KAMASUTRA.COM\\\\React\\\\Project\\\\SocialNetwork\\\\src\\\\Components\\\\Users\\\\UsersContainer.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { follow, unfollow, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching } from \"./../../Reducers-BLL/UsersReducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport Preloader from './../Common/Preloader/Preloader';\n\nvar UsersContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UsersContainer, _React$Component);\n\n  function UsersContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UsersContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UsersContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onPageChanged = function (pageNumber) {\n      _this.props.setCurrentPage(pageNumber);\n\n      _this.props.toggleIsFetching(true);\n\n      axios.get(\"https://social-network.samuraijs.com/api/1.0/users?count=\".concat(_this.props.pageSize, \"&page=\").concat(pageNumber)).then(function (response) {\n        _this.props.toggleIsFetching(false);\n\n        _this.props.setUsers(response.data.items);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UsersContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.toggleIsFetching(true);\n      axios.get(\"https://social-network.samuraijs.com/api/1.0/users?count=\".concat(this.props.pageSize, \"&page=\").concat(this.props.currentPage), {\n        withCredentials: true\n      }).then(function (response) {\n        _this2.props.toggleIsFetching(false);\n\n        _this2.props.setUsers(response.data.items);\n\n        _this2.props.setTotalUsersCount(response.data.totalCount);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.props.isFetching ? React.createElement(Preloader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }) : null, React.createElement(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UsersContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow: follow,\n  unfollow: unfollow,\n  setUsers: setUsers,\n  setCurrentPage: setCurrentPage,\n  setTotalUsersCount: setTotalUsersCount,\n  toggleIsFetching: toggleIsFetching\n})(UsersContainer);","map":{"version":3,"sources":["D:\\IT-KAMASUTRA.COM\\React\\Project\\SocialNetwork\\src\\Components\\Users\\UsersContainer.js"],"names":["React","connect","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","toggleIsFetching","axios","Users","Preloader","UsersContainer","onPageChanged","pageNumber","props","get","pageSize","then","response","data","items","currentPage","withCredentials","totalCount","isFetching","totalUsersCount","users","Component","mapStateToProps","state","usersPage"],"mappings":"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","sourcesContent":["import  React  from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  follow,\r\n  unfollow,\r\n  setUsers,\r\n  setCurrentPage,\r\n  setTotalUsersCount,\r\n  toggleIsFetching\r\n} from \"./../../Reducers-BLL/UsersReducer\";\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport Preloader from './../Common/Preloader/Preloader';\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() {\r\n      this.props.toggleIsFetching(true);\r\n    axios.get(\r\n      `https://social-network.samuraijs.com/api/1.0/users?count=${\r\n      this.props.pageSize\r\n      }&page=${this.props.currentPage}`,\r\n      {\r\n        withCredentials: true\r\n      })\r\n      .then(response => {\r\n        this.props.toggleIsFetching(false);\r\n        this.props.setUsers(response.data.items);\r\n        this.props.setTotalUsersCount(response.data.totalCount);\r\n      });\r\n  }\r\n\r\n  onPageChanged = pageNumber => {\r\n    this.props.setCurrentPage(pageNumber);\r\n    this.props.toggleIsFetching(true)\r\n\r\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?count=${\r\n          this.props.pageSize\r\n        }&page=${pageNumber}`\r\n      )\r\n      .then(response => {\r\n        this.props.toggleIsFetching(false)\r\n        this.props.setUsers(response.data.items);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n      {this.props.isFetching ? <Preloader /> : null}\r\n        <Users\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          onPageChanged={this.onPageChanged}\r\n          users={this.props.users}\r\n          follow={this.props.follow}\r\n          unfollow={this.props.unfollow}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    users: state.usersPage.users,\r\n    pageSize: state.usersPage.pageSize,\r\n    totalUsersCount: state.usersPage.totalUsersCount,\r\n    currentPage: state.usersPage.currentPage,\r\n    isFetching: state.usersPage.isFetching\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  follow: follow,\r\n  unfollow: unfollow,\r\n  setUsers: setUsers,\r\n  setCurrentPage: setCurrentPage,\r\n  setTotalUsersCount: setTotalUsersCount,\r\n  toggleIsFetching: toggleIsFetching\r\n})(UsersContainer);\r\n"]},"metadata":{},"sourceType":"module"}