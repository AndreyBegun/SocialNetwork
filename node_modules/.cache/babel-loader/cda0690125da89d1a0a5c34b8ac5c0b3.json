{"ast":null,"code":"import _classCallCheck from \"D:\\\\IT-KAMASUTRA.COM\\\\React\\\\Project\\\\SocialNetwork\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\IT-KAMASUTRA.COM\\\\React\\\\Project\\\\SocialNetwork\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\IT-KAMASUTRA.COM\\\\React\\\\Project\\\\SocialNetwork\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\IT-KAMASUTRA.COM\\\\React\\\\Project\\\\SocialNetwork\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\IT-KAMASUTRA.COM\\\\React\\\\Project\\\\SocialNetwork\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\IT-KAMASUTRA.COM\\\\React\\\\Project\\\\SocialNetwork\\\\src\\\\Components\\\\Users\\\\UsersContainer.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { followAC, unfollowAC, setUsersAC, setCurrentPageAC, setTotalUsersCountAC } from \"./../../Reducers-BLL/UsersReducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport preloader from '../../assets/images/ring-spinner.';\n\nvar UsersContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UsersContainer, _React$Component);\n\n  function UsersContainer() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UsersContainer);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UsersContainer)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onPageChanged = function (pageNumber) {\n      _this.props.setCurrentPage(pageNumber);\n\n      axios.get(\"https://social-network.samuraijs.com/api/1.0/users?count=\".concat(_this.props.pageSize, \"&page=\").concat(pageNumber)).then(function (response) {\n        _this.props.setUsers(response.data.items);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UsersContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(\"https://social-network.samuraijs.com/api/1.0/users?count=\".concat(this.props.pageSize, \"&page=\").concat(this.props.currentPage)).then(function (response) {\n        _this2.props.setUsers(response.data.items);\n\n        _this2.props.setTotalUsersCount(response.data.totalCount);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, this.props.isFetching ? React.createElement(\"img\", {\n        src: preloader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }) : null, React.createElement(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UsersContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    follow: function follow(userId) {\n      dispatch(followAC(userId));\n    },\n    unfollow: function unfollow(userId) {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: function setUsers(users) {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: function setCurrentPage(pageNumber) {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: function setTotalUsersCount(totalCount) {\n      dispatch(setTotalUsersCountAC(totalCount));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["D:\\IT-KAMASUTRA.COM\\React\\Project\\SocialNetwork\\src\\Components\\Users\\UsersContainer.js"],"names":["React","connect","followAC","unfollowAC","setUsersAC","setCurrentPageAC","setTotalUsersCountAC","axios","Users","preloader","UsersContainer","onPageChanged","pageNumber","props","setCurrentPage","get","pageSize","then","response","setUsers","data","items","currentPage","setTotalUsersCount","totalCount","isFetching","totalUsersCount","users","follow","unfollow","Component","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import  React  from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  followAC,\r\n  unfollowAC,\r\n  setUsersAC,\r\n  setCurrentPageAC,\r\n  setTotalUsersCountAC\r\n} from \"./../../Reducers-BLL/UsersReducer\";\r\nimport * as axios from \"axios\";\r\nimport Users from \"./Users\";\r\nimport preloader from '../../assets/images/ring-spinner.'\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `https://social-network.samuraijs.com/api/1.0/users?count=${\r\n          this.props.pageSize\r\n        }&page=${this.props.currentPage}`\r\n      )\r\n      .then(response => {\r\n        this.props.setUsers(response.data.items);\r\n        this.props.setTotalUsersCount(response.data.totalCount);\r\n      });\r\n  }\r\n\r\n  onPageChanged = pageNumber => {\r\n    this.props.setCurrentPage(pageNumber);\r\n\r\n    axios\r\n      .get(\r\n        `https://social-network.samuraijs.com/api/1.0/users?count=${\r\n          this.props.pageSize\r\n        }&page=${pageNumber}`\r\n      )\r\n      .then(response => {\r\n        this.props.setUsers(response.data.items);\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n      {this.props.isFetching ? <img src={preloader}/> : null}\r\n        <Users\r\n          totalUsersCount={this.props.totalUsersCount}\r\n          pageSize={this.props.pageSize}\r\n          currentPage={this.props.currentPage}\r\n          onPageChanged={this.onPageChanged}\r\n          users={this.props.users}\r\n          follow={this.props.follow}\r\n          unfollow={this.props.unfollow}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n  return {\r\n    users: state.usersPage.users,\r\n    pageSize: state.usersPage.pageSize,\r\n    totalUsersCount: state.usersPage.totalUsersCount,\r\n    currentPage: state.usersPage.currentPage,\r\n    isFetching: state.usersPage.isFetching\r\n  };\r\n};\r\nlet mapDispatchToProps = dispatch => {\r\n  return {\r\n    follow: userId => {\r\n      dispatch(followAC(userId));\r\n    },\r\n    unfollow: userId => {\r\n      dispatch(unfollowAC(userId));\r\n    },\r\n    setUsers: users => {\r\n      dispatch(setUsersAC(users));\r\n    },\r\n    setCurrentPage: pageNumber => {\r\n      dispatch(setCurrentPageAC(pageNumber));\r\n    },\r\n    setTotalUsersCount: totalCount => {\r\n      dispatch(setTotalUsersCountAC(totalCount));\r\n    }\r\n  };\r\n};\r\nexport default connect(mapStateToProps,mapDispatchToProps)(UsersContainer);\r\n"]},"metadata":{},"sourceType":"module"}