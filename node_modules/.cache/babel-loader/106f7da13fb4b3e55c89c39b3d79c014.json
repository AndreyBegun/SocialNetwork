{"ast":null,"code":"import _toConsumableArray from \"D:\\\\IT-KAMASUTRA.COM\\\\React\\\\Project\\\\SocialNetwork\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\IT-KAMASUTRA.COM\\\\React\\\\Project\\\\SocialNetwork\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar FOLLOW = \"FOLLOW\";\nvar UNFOLLOW = \"UNFOLLOW\";\nvar SET_USERS = \"SET_USERS\";\nvar initialState = {// users: [`Waiting for server`]\n};\n\nvar UsersReducer = function UsersReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW:\n      return _objectSpread({}, state, {\n        users: state.users.map(function (u) {\n          // идентично записи users: [...state.users]\n          if (u.id === action.userId) {\n            return _objectSpread({}, u, {\n              followed: true\n            });\n          }\n\n          return u;\n        })\n      });\n\n    case UNFOLLOW:\n      return _objectSpread({}, state, {\n        users: state.users.map(function (u) {\n          // идентично записи users: [...state.users]\n          if (u.id === action.userId) {\n            return _objectSpread({}, u, {\n              followed: false\n            });\n          }\n\n          return u;\n        })\n      });\n\n    case SET_USERS:\n      return _objectSpread({}, state, {\n        users: [].concat(_toConsumableArray(state.users), _toConsumableArray(action.users))\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport var followAC = function followAC(userId) {\n  return {\n    type: FOLLOW,\n    userId: userId\n  };\n};\nexport var unfollowAC = function unfollowAC(userId) {\n  return {\n    type: UNFOLLOW,\n    userId: userId\n  };\n};\nexport var setUsersAC = function setUsersAC(users) {\n  return {\n    type: SET_USERS,\n    users: users\n  };\n};\nexport default UsersReducer;","map":{"version":3,"sources":["D:\\IT-KAMASUTRA.COM\\React\\Project\\SocialNetwork\\src\\Reducers-BLL\\UsersReducer.js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","initialState","UsersReducer","state","action","type","users","map","u","id","userId","followed","followAC","unfollowAC","setUsersAC"],"mappings":";;AAAA,IAAMA,MAAM,GAAG,QAAf;AACA,IAAMC,QAAQ,GAAG,UAAjB;AACA,IAAMC,SAAS,GAAG,WAAlB;AAEA,IAAIC,YAAY,GAAG,CACjB;AADiB,CAAnB;;AAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBF,YAAyB;AAAA,MAAXG,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,MAAL;AACE,+BACKK,KADL;AAEEG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,CAAC,EAAI;AAC1B;AACA,cAAIA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACM,MAApB,EAA4B;AAC1B,qCAAYF,CAAZ;AAAeG,cAAAA,QAAQ,EAAE;AAAzB;AACD;;AACD,iBAAOH,CAAP;AACD,SANM;AAFT;;AAWF,SAAKT,QAAL;AACE,+BACKI,KADL;AAEEG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,CAAC,EAAI;AAAa;AACvC,cAAIA,CAAC,CAACC,EAAF,KAASL,MAAM,CAACM,MAApB,EAA4B;AAC1B,qCAAYF,CAAZ;AAAeG,cAAAA,QAAQ,EAAE;AAAzB;AACD;;AACD,iBAAOH,CAAP;AACD,SALM;AAFT;;AAUF,SAAKR,SAAL;AACE,+BACKG,KADL;AAEEG,QAAAA,KAAK,+BAAMH,KAAK,CAACG,KAAZ,sBAAsBF,MAAM,CAACE,KAA7B;AAFP;;AAKF;AACE,aAAOH,KAAP;AA/BJ;AAiCD,CAlCD;;AAoCA,OAAO,IAAMS,QAAQ,GAAG,SAAXA,QAAW,CAAAF,MAAM;AAAA,SAAK;AAAEL,IAAAA,IAAI,EAAEP,MAAR;AAAgBY,IAAAA,MAAM,EAANA;AAAhB,GAAL;AAAA,CAAvB;AACP,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAAAH,MAAM;AAAA,SAAK;AAAEL,IAAAA,IAAI,EAAEN,QAAR;AAAkBW,IAAAA,MAAM,EAANA;AAAlB,GAAL;AAAA,CAAzB;AACP,OAAO,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAAAR,KAAK;AAAA,SAAK;AAAED,IAAAA,IAAI,EAAEL,SAAR;AAAmBM,IAAAA,KAAK,EAALA;AAAnB,GAAL;AAAA,CAAxB;AAEP,eAAeJ,YAAf","sourcesContent":["const FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\"\r\n\r\nlet initialState = {\r\n  // users: [`Waiting for server`]\r\n};\r\n\r\nconst UsersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          // идентично записи users: [...state.users]\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: true };\r\n          }\r\n          return u;\r\n        })\r\n      };\r\n\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {            // идентично записи users: [...state.users]\r\n          if (u.id === action.userId) {\r\n            return { ...u, followed: false };\r\n          }\r\n          return u;\r\n        })\r\n      };\r\n\r\n    case SET_USERS:\r\n      return {\r\n        ...state,\r\n        users: [...state.users, ...action.users]\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const followAC = userId => ({ type: FOLLOW, userId });\r\nexport const unfollowAC = userId => ({ type: UNFOLLOW, userId });\r\nexport const setUsersAC = users => ({ type: SET_USERS, users });\r\n\r\nexport default UsersReducer;\r\n"]},"metadata":{},"sourceType":"module"}