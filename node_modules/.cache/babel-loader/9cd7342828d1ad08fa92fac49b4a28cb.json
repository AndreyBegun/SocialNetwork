{"ast":null,"code":"var _jsxFileName = \"D:\\\\IT-KAMASUTRA.COM\\\\React\\\\Project\\\\my-app-project\\\\src\\\\Components\\\\Dialogs\\\\DialogPage.js\";\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport mapStateToProps from \"react-redux/es/connect/mapStateToProps\";\nimport mapDispatchToProps from \"react-redux/es/connect/mapDispatchToProps\";\n\nvar DialogItem = function DialogItem(props) {\n  var path = '/dialogs/' + props.id;\n  return React.createElement(\"div\", {\n    className: s.dialogs + ' ' + s.active,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, props.name));\n};\n\nvar Message = function Message(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: props.src,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), props.message);\n};\n\nvar DialogPage = function DialogPage(props) {\n  debugger;\n  return React.createElement(\"div\", {\n    className: s.dialogs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: s.dialogItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.dialogsItem.map(function (el, i) {\n    return React.createElement(DialogItem, {\n      key: i,\n      name: el.name,\n      id: el.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n  })), React.createElement(\"div\", {\n    className: s.mesages,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"textarea\", {\n    value: props.currentDialogMessValue,\n    onChange: function onChange(e) {\n      props.dispatch({\n        type: 'CHANGE_CURRENT_DIALOG_MESSAGE',\n        dialMess: e.currentTarget.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: function onClick() {\n      props.dispatch({\n        type: 'ADD_MESSAGE_DIALOGS',\n        message: props.currentDialogMessValue\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\")), props.dialogMessages.map(function (el, i) {\n    return React.createElement(Message, {\n      key: i,\n      message: el.message,\n      src: el.urlFoto,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    });\n  })));\n};\n\nexport default DialogPage;","map":{"version":3,"sources":["D:\\IT-KAMASUTRA.COM\\React\\Project\\my-app-project\\src\\Components\\Dialogs\\DialogPage.js"],"names":["React","s","NavLink","connect","mapStateToProps","mapDispatchToProps","DialogItem","props","path","id","dialogs","active","name","Message","src","message","DialogPage","dialogItems","dialogsItem","map","el","i","mesages","currentDialogMessValue","e","dispatch","type","dialMess","currentTarget","value","dialogMessages","urlFoto"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport mapStateToProps from \"react-redux/es/connect/mapStateToProps\";\r\nimport mapDispatchToProps from \"react-redux/es/connect/mapDispatchToProps\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = '/dialogs/' + props.id;\r\n    return (\r\n        <div className={s.dialogs + ' ' + s.active}>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div><img src={props.src} alt=''/>{props.message}</div>\r\n    )\r\n}\r\n\r\nconst DialogPage = (props) => {\r\ndebugger\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogItems}>\r\n                {\r\n                    props.dialogsItem.map((el, i) => {\r\n                        return (\r\n                            <DialogItem key={i} name={el.name} id={el.id}/>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n            <div className={s.mesages}>\r\n                <div>\r\n                    <textarea value={props.currentDialogMessValue} onChange={(e) => {\r\n\r\n                        props.dispatch({\r\n                            type: 'CHANGE_CURRENT_DIALOG_MESSAGE',\r\n                            dialMess: e.currentTarget.value\r\n                        })\r\n                    }}></textarea>\r\n                    <button onClick={() => {\r\n                        props.dispatch({\r\n                            type: 'ADD_MESSAGE_DIALOGS',\r\n                            message: props.currentDialogMessValue\r\n                        });\r\n                    }}>Добавить сообщение\r\n                    </button>\r\n                </div>\r\n                {\r\n                    props.dialogMessages.map((el, i) => {\r\n                        return (\r\n                            <Message key={i} message={el.message} src={el.urlFoto}/>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default DialogPage;\r\n"]},"metadata":{},"sourceType":"module"}