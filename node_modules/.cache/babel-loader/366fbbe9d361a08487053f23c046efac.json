{"ast":null,"code":"import _objectSpread from \"D:\\\\IT-KAMASUTRA.COM\\\\React\\\\Project\\\\SocialNetwork\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport axios from '../DAL/axios-instance';\nimport { me, setIsAuth } from \"./AuthReducer\";\nvar SET_STATUS = 'App/Login/SET_STATUS';\nvar SET_MESSAGE = 'App/Login/SET_MESSAGE';\nexport var statuses = {\n  INIT: 'INIT',\n  ERROR: 'ERROR',\n  INPROGRESS: 'INPROGRESS',\n  CAPTCHAREQUIRED: 'CAPTCHAREQUIRED',\n  SUCCESS: 'SUCCESS'\n};\nvar initialState = {\n  status: statuses.INIT,\n  message: '',\n  captchaUrl: ''\n};\nexport var setStatus = function setStatus(status) {\n  return {\n    type: SET_STATUS,\n    status: status\n  };\n};\nexport var setMessage = function setMessage(message) {\n  return {\n    type: SET_MESSAGE,\n    message: message\n  };\n};\nexport var login = function login(email, password, rememberMe, captcha) {\n  return function (dispatch) {\n    dispatch(setStatus(statuses.INPROGRESS));\n    axios.post('auth/login', {\n      email: email,\n      password: password,\n      rememberMe: rememberMe\n    }).then(function (res) {\n      if (res.data.resultCode === 0) {\n        dispatch(setStatus(statuses.SUCCESS));\n        dispatch(setIsAuth(true));\n        dispatch(me());\n      } else {\n        dispatch(setStatus(statuses.ERROR));\n        dispatch(setMessage(res.data.messages[0]));\n      }\n    });\n  };\n};\n\nvar loginReducer = function loginReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_STATUS:\n      {\n        return _objectSpread({}, state, {\n          status: action.status\n        });\n      }\n\n    case SET_MESSAGE:\n      {\n        return _objectSpread({}, state, {\n          message: action.message\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default loginReducer;","map":{"version":3,"sources":["D:\\IT-KAMASUTRA.COM\\React\\Project\\SocialNetwork\\src\\Reducers-BLL\\LoginReducer.js"],"names":["axios","me","setIsAuth","SET_STATUS","SET_MESSAGE","statuses","INIT","ERROR","INPROGRESS","CAPTCHAREQUIRED","SUCCESS","initialState","status","message","captchaUrl","setStatus","type","setMessage","login","email","password","rememberMe","captcha","dispatch","post","then","res","data","resultCode","messages","loginReducer","state","action"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,uBAAlB;AACA,SAAQC,EAAR,EAAYC,SAAZ,QAA4B,eAA5B;AAGA,IAAMC,UAAU,GAAG,sBAAnB;AACA,IAAMC,WAAW,GAAG,uBAApB;AAEA,OAAO,IAAMC,QAAQ,GAAG;AACpBC,EAAAA,IAAI,EAAE,MADc;AAEpBC,EAAAA,KAAK,EAAE,OAFa;AAGpBC,EAAAA,UAAU,EAAE,YAHQ;AAIpBC,EAAAA,eAAe,EAAE,iBAJG;AAKpBC,EAAAA,OAAO,EAAE;AALW,CAAjB;AASP,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAEP,QAAQ,CAACC,IADF;AAEfO,EAAAA,OAAO,EAAE,EAFM;AAGfC,EAAAA,UAAU,EAAC;AAHI,CAAnB;AAMA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACH,MAAD;AAAA,SAAa;AAACI,IAAAA,IAAI,EAAEb,UAAP;AAAmBS,IAAAA,MAAM,EAANA;AAAnB,GAAb;AAAA,CAAlB;AACP,OAAO,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAACJ,OAAD;AAAA,SAAc;AAACG,IAAAA,IAAI,EAAEZ,WAAP;AAAoBS,IAAAA,OAAO,EAAPA;AAApB,GAAd;AAAA,CAAnB;AAGP,OAAO,IAAMK,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAQC,QAAR,EAAkBC,UAAlB,EAA8BC,OAA9B;AAAA,SAA0C,UAACC,QAAD,EAAc;AAEzEA,IAAAA,QAAQ,CAACR,SAAS,CAACV,QAAQ,CAACG,UAAV,CAAV,CAAR;AAEAR,IAAAA,KAAK,CAACwB,IAAN,CAAW,YAAX,EAAyB;AACrBL,MAAAA,KAAK,EAAEA,KADc;AAErBC,MAAAA,QAAQ,EAAEA,QAFW;AAGrBC,MAAAA,UAAU,EAAEA;AAHS,KAAzB,EAIGI,IAJH,CAIQ,UAAAC,GAAG,EAAI;AACZ,UAAGA,GAAG,CAACC,IAAJ,CAASC,UAAT,KAAwB,CAA3B,EAA6B;AACzBL,QAAAA,QAAQ,CAACR,SAAS,CAACV,QAAQ,CAACK,OAAV,CAAV,CAAR;AACAa,QAAAA,QAAQ,CAACrB,SAAS,CAAC,IAAD,CAAV,CAAR;AACAqB,QAAAA,QAAQ,CAACtB,EAAE,EAAH,CAAR;AAEH,OALD,MAKO;AACHsB,QAAAA,QAAQ,CAACR,SAAS,CAACV,QAAQ,CAACE,KAAV,CAAV,CAAR;AACAgB,QAAAA,QAAQ,CAACN,UAAU,CAACS,GAAG,CAACC,IAAJ,CAASE,QAAT,CAAkB,CAAlB,CAAD,CAAX,CAAR;AAEH;AACH,KAfD;AAiBH,GArBoB;AAAA,CAAd;;AAuBP,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBpB,YAAyB;AAAA,MAAXqB,MAAW;;AAEnD,UAAQA,MAAM,CAAChB,IAAf;AACI,SAAKb,UAAL;AAAiB;AACb,iCACO4B,KADP;AAEInB,UAAAA,MAAM,EAAEoB,MAAM,CAACpB;AAFnB;AAIH;;AACD,SAAKR,WAAL;AAAkB;AACd,iCACO2B,KADP;AAEIlB,UAAAA,OAAO,EAAEmB,MAAM,CAACnB;AAFpB;AAIH;;AACD;AAAS;AACL,eAAOkB,KAAP;AACH;AAfL;AAiBH,CAnBD;;AAqBA,eAAeD,YAAf","sourcesContent":["import axios from '../DAL/axios-instance';\r\nimport {me, setIsAuth} from \"./AuthReducer\";\r\n\r\n\r\nconst SET_STATUS = 'App/Login/SET_STATUS';\r\nconst SET_MESSAGE = 'App/Login/SET_MESSAGE';\r\n\r\nexport const statuses = {\r\n    INIT: 'INIT',\r\n    ERROR: 'ERROR',\r\n    INPROGRESS: 'INPROGRESS',\r\n    CAPTCHAREQUIRED: 'CAPTCHAREQUIRED',\r\n    SUCCESS: 'SUCCESS'\r\n\r\n}\r\n\r\nlet initialState = {\r\n    status: statuses.INIT,\r\n    message: '',\r\n    captchaUrl:''\r\n}\r\n\r\nexport const setStatus = (status) => ({type: SET_STATUS, status});\r\nexport const setMessage = (message) => ({type: SET_MESSAGE, message});\r\n\r\n\r\nexport const login = (email, password, rememberMe, captcha) => (dispatch) => {\r\n\r\n    dispatch(setStatus(statuses.INPROGRESS));\r\n\r\n    axios.post('auth/login', {\r\n        email: email,\r\n        password: password,\r\n        rememberMe: rememberMe\r\n    }).then(res => {\r\n       if(res.data.resultCode === 0){\r\n           dispatch(setStatus(statuses.SUCCESS));\r\n           dispatch(setIsAuth(true));\r\n           dispatch(me());\r\n\r\n       } else {\r\n           dispatch(setStatus(statuses.ERROR));\r\n           dispatch(setMessage(res.data.messages[0]));\r\n\r\n       }\r\n    });\r\n\r\n}\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_STATUS: {\r\n            return  {\r\n                ...state,\r\n                status: action.status,\r\n            }\r\n        }\r\n        case SET_MESSAGE: {\r\n            return  {\r\n                ...state,\r\n                message: action.message,\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\nexport default loginReducer\r\n"]},"metadata":{},"sourceType":"module"}