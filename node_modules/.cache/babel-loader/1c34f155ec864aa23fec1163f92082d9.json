{"ast":null,"code":"import _objectSpread from \"D:\\\\IT-KAMASUTRA.COM\\\\React\\\\Project\\\\SocialNetwork\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport axios from \"../dal/axios-instance\";\nimport { setMessage, setStatus, statuses } from \"./LoginReducer\";\nvar SET_IS_AUTH = 'App/AUTH/SET_IS_AUTH';\nvar initialState = {\n  isAuth: false,\n  userInfo: {\n    userId: null,\n    userName: null,\n    avatarUrl: ''\n  }\n};\nexport var setIsAuth = function setIsAuth(value) {\n  return {\n    type: SET_IS_AUTH,\n    value: value\n  };\n};\nexport var me = function me(email, password, rememberMe, captcha) {\n  return function (dispatch) {\n    dispatch(setStatus(statuses.INPROGRESS));\n    axios.post('auth/login', {\n      email: email,\n      password: password,\n      rememberMe: rememberMe\n    }).then(function (res) {\n      if (res.data.resultCode === 0) {\n        dispatch(setStatus(statuses.SUCCESS));\n        dispatch(setIsAuth(true));\n        alert('мы залогинились');\n      } else {\n        dispatch(setStatus(statuses.ERROR));\n        console.log(res.data.messages[0]);\n        dispatch(setMessage(res.data.messages[0]));\n      }\n    });\n  };\n};\n\nvar AuthReducer = function AuthReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_IS_AUTH:\n      {\n        return _objectSpread({}, state, {\n          isAuth: action.value\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport default AuthReducer;","map":{"version":3,"sources":["D:\\IT-KAMASUTRA.COM\\React\\Project\\SocialNetwork\\src\\Reducers-BLL\\AuthReduser.js"],"names":["axios","setMessage","setStatus","statuses","SET_IS_AUTH","initialState","isAuth","userInfo","userId","userName","avatarUrl","setIsAuth","value","type","me","email","password","rememberMe","captcha","dispatch","INPROGRESS","post","then","res","data","resultCode","SUCCESS","alert","ERROR","console","log","messages","AuthReducer","state","action"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,uBAAlB;AACA,SAAQC,UAAR,EAAoBC,SAApB,EAA+BC,QAA/B,QAA8C,gBAA9C;AAGA,IAAMC,WAAW,GAAG,sBAApB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,MAAM,EAAE,KADO;AAEfC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,MAAM,EAAE,IADF;AAENC,IAAAA,QAAQ,EAAE,IAFJ;AAGNC,IAAAA,SAAS,EAAE;AAHL;AAFK,CAAnB;AASA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD;AAAA,SAAY;AAACC,IAAAA,IAAI,EAAET,WAAP;AAAoBQ,IAAAA,KAAK,EAALA;AAApB,GAAZ;AAAA,CAAlB;AAEP,OAAO,IAAME,EAAE,GAAG,SAALA,EAAK,CAACC,KAAD,EAAQC,QAAR,EAAkBC,UAAlB,EAA8BC,OAA9B;AAAA,SAA0C,UAACC,QAAD,EAAc;AAEtEA,IAAAA,QAAQ,CAACjB,SAAS,CAACC,QAAQ,CAACiB,UAAV,CAAV,CAAR;AAEApB,IAAAA,KAAK,CAACqB,IAAN,CAAW,YAAX,EAAyB;AACrBN,MAAAA,KAAK,EAAEA,KADc;AAErBC,MAAAA,QAAQ,EAAEA,QAFW;AAGrBC,MAAAA,UAAU,EAAEA;AAHS,KAAzB,EAIGK,IAJH,CAIQ,UAAAC,GAAG,EAAI;AACX,UAAGA,GAAG,CAACC,IAAJ,CAASC,UAAT,KAAwB,CAA3B,EAA6B;AACzBN,QAAAA,QAAQ,CAACjB,SAAS,CAACC,QAAQ,CAACuB,OAAV,CAAV,CAAR;AACAP,QAAAA,QAAQ,CAACR,SAAS,CAAC,IAAD,CAAV,CAAR;AACAgB,QAAAA,KAAK,CAAC,iBAAD,CAAL;AACH,OAJD,MAIO;AACHR,QAAAA,QAAQ,CAACjB,SAAS,CAACC,QAAQ,CAACyB,KAAV,CAAV,CAAR;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACC,IAAJ,CAASO,QAAT,CAAkB,CAAlB,CAAZ;AACAZ,QAAAA,QAAQ,CAAClB,UAAU,CAACsB,GAAG,CAACC,IAAJ,CAASO,QAAT,CAAkB,CAAlB,CAAD,CAAX,CAAR;AAEH;AACJ,KAfD;AAiBH,GArBiB;AAAA,CAAX;;AAuBP,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzB5B,YAAyB;AAAA,MAAX6B,MAAW;;AAElD,UAAQA,MAAM,CAACrB,IAAf;AACI,SAAKT,WAAL;AAAkB;AACd,iCACO6B,KADP;AAEI3B,UAAAA,MAAM,EAAE4B,MAAM,CAACtB;AAFnB;AAIH;;AAED;AAAS;AACL,eAAOqB,KAAP;AACH;AAVL;AAYH,CAdD;;AAgBA,eAAeD,WAAf","sourcesContent":["import axios from \"../dal/axios-instance\";\r\nimport {setMessage, setStatus, statuses} from \"./LoginReducer\";\r\n\r\n\r\nconst SET_IS_AUTH = 'App/AUTH/SET_IS_AUTH';\r\n\r\nlet initialState = {\r\n    isAuth: false,\r\n    userInfo: {\r\n        userId: null,\r\n        userName: null,\r\n        avatarUrl: ''\r\n    }\r\n}\r\n\r\nexport const setIsAuth = (value) => ({type: SET_IS_AUTH, value});\r\n\r\nexport const me = (email, password, rememberMe, captcha) => (dispatch) => {\r\n\r\n    dispatch(setStatus(statuses.INPROGRESS));\r\n\r\n    axios.post('auth/login', {\r\n        email: email,\r\n        password: password,\r\n        rememberMe: rememberMe\r\n    }).then(res => {\r\n        if(res.data.resultCode === 0){\r\n            dispatch(setStatus(statuses.SUCCESS));\r\n            dispatch(setIsAuth(true))\r\n            alert('мы залогинились')\r\n        } else {\r\n            dispatch(setStatus(statuses.ERROR));\r\n            console.log(res.data.messages[0])\r\n            dispatch(setMessage(res.data.messages[0]));\r\n\r\n        }\r\n    });\r\n\r\n}\r\n\r\nconst AuthReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_IS_AUTH: {\r\n            return  {\r\n                ...state,\r\n                isAuth: action.value,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\nexport default AuthReducer\r\n"]},"metadata":{},"sourceType":"module"}